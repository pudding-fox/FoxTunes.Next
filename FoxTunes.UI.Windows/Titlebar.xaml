<UserControl x:Class="FoxTunes.Titlebar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Core="clr-namespace:FoxTunes;assembly=FoxTunes.Core"
             xmlns:ViewModel="clr-namespace:FoxTunes.ViewModel"
             mc:Ignorable="d" d:DesignHeight="30" d:DesignWidth="300" d:DataContext="{d:DesignInstance Core:Core, IsDesignTimeCreatable=False}" Focusable="False">
    <UserControl.Resources>
        <ViewModel:Titlebar x:Key="ViewModel" Window="{Binding Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
        <ViewModel:WindowStateConverter x:Key="WindowStateConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></BooleanToVisibilityConverter>
        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="FontFamily" Value="Marlett"/>
            <Setter Property="FontSize" Value="12"/>
            <!-- System -->
            <Setter Property="Background" Value="{DynamicResource ControlBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
            <Setter Property="Template" Value="{DynamicResource ButtonTemplate}" />
        </Style>
        <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
            <ControlTemplate.Resources>
                <Storyboard x:Key="HoverOn">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="HoverOff">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </ControlTemplate.Resources>
            <Grid x:Name="Grid">
                <Border x:Name="HoverBorder" Opacity="0" Background="{DynamicResource HoverBrush}" />
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                    </Trigger.ExitActions>
                    <Trigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                    </Trigger.EnterActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Rectangle Grid.Column="0" Margin="3,3,10,3" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}">
            <Rectangle.Fill>
                <ImageBrush ImageSource="{Binding Icon, Mode=OneWay, Source={StaticResource ViewModel}}"></ImageBrush>
            </Rectangle.Fill>
        </Rectangle>
        <TextBlock Grid.Column="1" Text="{Binding Title, Source={StaticResource ViewModel}}" VerticalAlignment="Center" Foreground="{DynamicResource TextBrush}"></TextBlock>
        <Button Name="Minimize" Grid.Column="2" Command="{Binding MinimizeCommand, Mode=OneWay, Source={StaticResource ViewModel}}">&#x30;</Button>
        <Button Name="MaximizeRestore" Grid.Column="3" 
                Command="{Binding MaximizeRestoreCommand, Mode=OneWay, Source={StaticResource ViewModel}}" 
                Content="{Binding WindowState, Converter={StaticResource WindowStateConverter}, Source={StaticResource ViewModel}}"
                Visibility="{Binding CanMaximizeRestore, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource ViewModel}}">
        </Button>
        <Button Name="Close" Grid.Column="4" Command="{Binding CloseCommand, Mode=OneWay, Source={StaticResource ViewModel}}">&#x72;</Button>
    </Grid>
</UserControl>
